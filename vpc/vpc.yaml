Description: "This template deploys a VPC, with a pair of public and private subnets spread\nacross two Availability Zones. It deploys an Internet Gateway, with a default \n\nroute on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), \n\nand default routes for them in the private subnets."
Parameters:
    EnvironmentName:
        Description: 'An environment name that will be prefixed to resource names'
        Type: String
        Default: Carnival-poc
    VpcCIDR:
        Description: 'Please enter the IP range (CIDR notation) for this VPC'
        Type: String
        Default: 10.192.0.0/16
    PublicSubnet1CIDR:
        Description: 'Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone'
        Type: String
        Default: 10.192.10.0/24
    PublicSubnet2CIDR:
        Description: 'Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone'
        Type: String
        Default: 10.192.11.0/24
    PrivateSubnet1CIDR:
        Description: 'Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone'
        Type: String
        Default: 10.192.20.0/24
    PrivateSubnet2CIDR:
        Description: 'Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone'
        Type: String
        Default: 10.192.21.0/24
Resources:
    VPC:
        Type: 'AWS::EC2::VPC'
        Properties:
            CidrBlock: null
            Tags: [{Key: Name, Value: null}]
    InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties:
            Tags: [{Key: Name, Value: null}]
    InternetGatewayAttachment:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
            InternetGatewayId: null
            VpcId: null
    PublicSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: null
            AvailabilityZone: null
            CidrBlock: null
            MapPublicIpOnLaunch: true
            Tags: [{Key: Name, Value: null}]
    PublicSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: null
            AvailabilityZone: null
            CidrBlock: null
            MapPublicIpOnLaunch: true
            Tags: [{Key: Name, Value: null}]
    PrivateSubnet1:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: null
            AvailabilityZone: null
            CidrBlock: null
            MapPublicIpOnLaunch: false
            Tags: [{Key: Name, Value: null}]
    PrivateSubnet2:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: null
            AvailabilityZone: null
            CidrBlock: null
            MapPublicIpOnLaunch: false
            Tags: [{Key: Name, Value: null}]
    NatGateway1EIP:
        Type: 'AWS::EC2::EIP'
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc
    NatGateway2EIP:
        Type: 'AWS::EC2::EIP'
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc
    NatGateway1:
        Type: 'AWS::EC2::NatGateway'
        Properties:
            AllocationId: null
            SubnetId: null
    NatGateway2:
        Type: 'AWS::EC2::NatGateway'
        Properties:
            AllocationId: null
            SubnetId: null
    PublicRouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: null
            Tags: [{Key: Name, Value: null}]
    DefaultPublicRoute:
        Type: 'AWS::EC2::Route'
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: null
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: null
    PublicSubnet1RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: null
            SubnetId: null
    PublicSubnet2RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: null
            SubnetId: null
    PrivateRouteTable1:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: null
            Tags: [{Key: Name, Value: null}]
    DefaultPrivateRoute1:
        Type: 'AWS::EC2::Route'
        Properties:
            RouteTableId: null
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: null
    PrivateSubnet1RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: null
            SubnetId: null
    PrivateRouteTable2:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: null
            Tags: [{Key: Name, Value: null}]
    DefaultPrivateRoute2:
        Type: 'AWS::EC2::Route'
        Properties:
            RouteTableId: null
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: null
    PrivateSubnet2RouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            RouteTableId: null
            SubnetId: null
    CarnivalSecurityGroup:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupName: custom-carnival-sg
            GroupDescription: 'Security group with multiple allows for:'
            VpcId: null
            SecurityGroupIngress: [{IpProtocol: tcp, FromPort: '5439', ToPort: '5439', CidrIp: 0.0.0.0/0}]
Outputs:
    VPC:
        Description: 'A reference to the created VPC'
        Value: null
    PublicSubnets:
        Description: 'A list of the public subnets'
        Value: null
    PrivateSubnets:
        Description: 'A list of the private subnets'
        Value: null
    PublicSubnet1:
        Description: 'A reference to the public subnet in the 1st Availability Zone'
        Value: null
    PublicSubnet2:
        Description: 'A reference to the public subnet in the 2nd Availability Zone'
        Value: null
    PrivateSubnet1:
        Description: 'A reference to the private subnet in the 1st Availability Zone'
        Value: null
    PrivateSubnet2:
        Description: 'A reference to the private subnet in the 2nd Availability Zone'
        Value: null
    CarnivalSecurityGroup:
        Description: 'Security group with no ingress rule'
        Value: null

